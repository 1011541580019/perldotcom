<!-- This week x 3 on perl6 (1 May - 20 May 2001) -->

<br />
<!::field::date::>
<H3><a name="Notes">Notes</a></H3>

</P>

<P>

You can subscribe to an email version of this summary by sending an empty 
message to
<a href="mailto:perl6-digest-subscribe@netthink.co.uk">perl6-digest-subscribe@netthink.co.uk</a>.
</P>

<P>
Please send corrections and additions to 
<CODE>perl6-thisweek-YYYYMM@simon-cozens.org</CODE>, where 
<CODE>YYYYMM</CODE> is the current year and month.
</P>

<P>
It's been two months since we've seen a Perl 6 Summary, but it's certainly not 
for lack of activity.  Instead, Simon's been very busy, er, being Simon, so 
I'm going to be hacking the summaries for a while.  Since there's been a lot of 
traffic flowing since we last aired, we're going to skip April, and give a 
glossy on what's gone on so far in May.  The weekly summaries should 
resume next week. 
<H3><a name="Perl_6_Internals">Perl 6 Internals</a></H3>

</P>

<P>

All was fairly quiet with the 
<CODE>-internals</CODE> list, so I'm going to dip back into 
the tail end of April for some significant events.  Dan Sugalski pointed 
everyone to an updated preview of the upcoming Garbage Collection PDD.  
Dave Storrs also released a first rough cut on a 
<a href="http://archive.develooper.com/perl6-internals@perl.org/msg02895.html">debugger PDD</a>.  After feedback from Jarkko and Dan on some scope tweaks to the PDD, 
Dave went back to work on it.  Dave Mitchell proposed 
<a href="http://archive.develooper.com/perl6-internals@perl.org/msg02922.html">"PDD: Conventions and Guidelines for Perl Source Code"</a> to try to establish some coding standards for Perl 6.  Reaction was mostly 
silent assent (we presume), except for a peripheral discussion centered 
around where macros fall on the scale from Good to Bad.    
<H3><a name="Perl_6_Meta">Perl 6 Meta</a></H3>

</P>

<P>

It was much louder on the 
<CODE>-meta</CODE> side of the house.  Peter Scott 
<a href="http://archive.develooper.com/perl6-meta@perl.org/msg00802.html">wondered aloud </a> whether Perl 6 was enough of a name change to reflect the apparent differences 
between Perl 5 and the new language.  After some half-digested suggestions on 
version numbers, code names, and even a departure from the Perl name itself, 
Nathan Torkington 
<a href="http://archive.develooper.com/perl6-meta@perl.org/msg00821.html">dropped a teaser </a> for Damian Conway's soon-to-be 
<a href="http://www.perl.com/pub/2001/05/08/exegesis2.html">Exegesis 2</a>, and Larry 
<a href="http://archive.develooper.com/perl6-meta@perl.org/msg00823.html">expressed </a> that he didn't feel the language was going to look all that different.
</P>

<P>
Adam Turoff later opined:
<blockquote></P>

<P>
I don't think backwards compatibility is the point here.
</P>

<P>
I picked up Camel 1 recently, and it was quite amazing how different
Perl4 *felt*.  It's like Perl was being pitched as a good language
for writing standalone programs or utilities of standalone programs
(the type a sysadmin would use).  It didn't feel like it was being
offered as the kind of language to write things like Class::Contract,
Inline::C, AxKit, SOAP::Lite or the all-singing-all-dancing CGI.pm.
</blockquote></P>

<P>
The ensuing discussion attempted to answer the $64,000 question:  In the 
effort to &quot;make the hard things easy,&quot; were the easy things becoming harder?  
Was the entry barrier to Perl being raised too high as a side-effect of the 
sheer capabilities of the complexity of the language?  There were plenty of 
arguments on all five sides of the coin.
</P>

<P>
Michael Schwern attempted to clarify some of the concerns by pointing out that 
<a href="http://archive.develooper.com/perl6-meta@perl.org/msg00834.html">"you will not have to rewrite your Perl 5 programs"</a>, since Larry had apocalyzed Perl 5 syntax handling for Perl 6, as well.  
</P>

<P>
Nathan then 
<a href="http://archive.develooper.com/perl6-meta@perl.org/msg00844.html">posted some sample code</a> to show exactly how unchanged common Perl will be.
<H3><a name="Perl_6_Language">Perl 6 Language</a></H3>

</P>

<P>

The -language list saw the bulk of the activity, with over 500 messages during
the three week period.  
<H4><a name="Apocalypse_2">Apocalypse 2</a></H4>

</P>

<P>

As expected, Larry's
<a href="http://www.perl.com/pub/2001/05/03/wall.html">Apocalypse 2</a> generated a lot of response.  Most of it was Q&amp;A and general water cooler talk,
but there are a couple things to bubble to the top.
</P>

<P>
Richard Proctor
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06882.html">pointed out</a> an ambiguity between the new and old uses of 
<CODE>\Q</CODE>.  At the thread's end,
it looked as though Larry was in the process of consolidating all quoting
constructs into one meta-syntax, although nothing specific was put forth.
</P>

<P>
Nathan Wiger was the first to 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06896.html">express concerns</a> about the new syntax for the 
<CODE>I</CODE> in 
<CODE>I/O</CODE>.  (One of the basic issues of several
folks was the verbiage needed to accomplish something as common as reading input.)
Larry proffered some musings 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06938.html">here</a>,
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06997.html">here</a>, and
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07191.html">here</a>.
</P>

<P>
Nathan also asked for clarification on 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06916.html">context and variables</a>, which both
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07001.html">Larry</a> and 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06917.html">Damian</a> provided.
<H4><a name="Exegesis_2">Exegesis 2</a></H4>

</P>

<P>

Damian Conway's
<a href="http://www.perl.com/pub/2001/05/08/exegesis2.html">Exegesis 2</a> also spawned a lot of traffic.  With few exceptions, however, the discussion
was completely focused on properties and the new 
<CODE>is</CODE> keyword.  Responses were
varied as to what level of confusion the author was in, but the overall trend
was fairly static - properties on values versus variables, and how it all comes
together.  Damian posted one last
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07298.html">explanation</a>.
<H4><a name="Sandboxing">Sandboxing</a></H4>

</P>

<P>

David Nicol
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06850.html">asked</a> whether Perl 6 should support sandboxing, or if it should rely on the
underlying OS.
</P>

<P>
After some minor debate, the general consensus was that Perl should support its
own sandboxing, which should be (relatively) trivial, at least for security
concerns.  There was some expressed worry, however, as to how to handle resource
limitations.
<H4><a name="Undecorated_References">Undecorated References</a></H4>

</P>

<P>

David Nicol also
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07066.html">suggested</a> that references be undecorated, in an effort to reclaim 
<CODE>$</CODE> as a content hint, as
well as a contextual one.  After a fairly meandering discussion on Perl 5, Perl 6,
and Hungarian notation, Larry
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07095.html">said</a>:
<blockquote></P>

<P>
I happen to like $ and @.  They're not going away in standard Perl as
long as I have anything to do with it.  Nevertheless, my vision for Perl
is that it enable people to do what *they* want, not what I want.
</blockquote><H4><a name="Lexing_and_Pushdown_Expressions">Lexing and Pushdown Expressions</a></H4>

</P>

<P>

Daniel Wilkerson 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg07176.html">requested</a> better parsing capabilities to be built into Perl.  There was general
agreement that Perl had some weaknesses in these areas, but some trepidation
on solving it beyond how current Perl modules do.
<H4><a name="Miscellaneous">Miscellaneous</a></H4>

</P>

<P>

Alexander Farber 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06798.html">asked</a> for 
<CODE>last</CODE> to work in 
<CODE>grep</CODE>.  After a couple demonstrations on how this was
possible in Perl 5, the thread shifted to talking about compiler optimizations.
</P>

<P>
David Grove 
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06804.html">queried</a> about the similarities between Perl 6 and .NET.  After a couple responses on how
<a href="http://archive.develooper.com/perl6-language@perl.org/msg06808.html">this makes sense</a>, the thread shifted to talking about data serialization.
<H3><a name="Perl_6_Docs_Released">Perl 6 Docs Released</a></H3>

</P>

<P>

Here are some of the major documents released during this period:
</P>

<P>
Apocalypse
<a href="http://www.perl.com/pub/2001/05/03/wall.html">Two</a>, Larry Wall.
</P>

<P>
Exegesis
<a href="http://www.perl.com/pub/2001/05/08/exegesis2.html">Two</a>, Damian Conway.
</P>

<P>
PDD
<a href="http://archive.develooper.com/perl6-internals@perl.org/msg02895.html">Debugger</a>, Dave Storrs (rough draft, v1)
</P>

<P>
PDD
<a href="http://archive.develooper.com/perl6-internals@perl.org/msg02922.html">Conventions and Guidelines for Perl Source Code</a>, Dave Mitchell (Proposed, v1)
</P>

<P>

Until next week, I remain Simon's humble, and (mostly) obedient, servant,
</P>

<hr>

<a href="mailto:bwarnock@capita.com">Bryan C. Warnock</a>

<ul>
  <li><a href="#Notes">Notes</a>
  <li><a href="#Perl_6_Internals">Perl 6 Internals</a>
  <li><a href="#Perl_6_Meta">Perl 6 Meta</a>
  <li><a href="#Perl_6_Language">Perl 6 Language</a>
  <li><a href="#Apocalypse_2">Apocalypse 2</a>
  <li><a href="#Exegesis_2">Exegesis 2</a>
  <li><a href="#Sandboxing">Sandboxing</a>
  <li><a href="#Undecorated_References">Undecorated References</a>
  <li><a href="#Lexing_and_Pushdown_Expressions">Lexing and Pushdown Expressions</a>
  <li><a href="#Miscellaneous">Miscellaneous</a>
  <li><a href="#Perl_6_Docs_Released">Perl 6 Docs Released</a>
</ul>
