</P>

<P>


<!-- This week on perl5-porters (20--26 Feb 2001) -->

<br />
<!::field::date::><br />
      <H3><a name="Notes">Notes</a></H3>

</P>

<P>

You can subscribe to an email version of this summary by sending an
empty message to 
<a href="mailto:perl5-porters-digest@netthink.co.uk"><tt>perl5-porters-digest@netthink.co.uk</tt></a>; there's also a similar summary for the Perl 6 mailing lists, which you
can subscribe to at 
<a href="mailto:perl6-digest@netthink.co.uk"><tt>perl6-digest@netthink.co.uk</tt></a>.
</P>

<P>

Please send corrections and additions to 
<CODE>perl-thisweek-YYYYMM@simon-cozens.org</CODE> where 
<CODE>YYYYMM</CODE> is the current year and month.
</P>

<P>
This week was very busy, but there were a lot of cross-posts from other
lists. Partly due to the volume of traffic and partly due to work
getting horribly, horribly busy, I've had to delay finishing this
summary for a couple of days. My apologies. 
<H3><a name="Smoke_Testing">Smoke Testing</a></H3>

</P>

<P>

Mr. Schwern sprung into action yet again with another brilliant idea:
automated builds of Perl in all possible configurations and reporting
the &quot;smoke test&quot; results to P5P. OK, it's been talked about a number of
times in the past, but this time someone's done something about it.
Bravo, Schwern!
Of course, as with all good ideas<!-- in the Perl community-->, it
was nearly drowned out by lots and lots of trivial bickering. Schwern had called
the mailing list 
<CODE>smokers@perl.org</CODE>, and the smoke testing software 
<CODE>SmokingJacket</CODE>. This produced objections from non-smokers and recovering smokers, and
started a long and tedious objection - counterproposal cycle.
Eventually, the list was given an alias of 
<CODE>daily-build@perl.org</CODE>.
</P>

<P>
Schwern, however, had the last laugh when a change was needed to 
[SmokingJacket]:
<blockquote></P>

<P>
It seems we're overwhelming perlbug and p5p with redundant reports.  A
little too successful. :) The perlbug people are working on a way to
accommodate us and we should produce a new version of SmokingJacket
shortly.
</P>

<P>
Until then, please *STOP* using SmokingJacket.  Sorry about the
trouble, I know it can be difficult to stop smoking, but we'll be sure
to issue a patch to help. :P
</blockquote></P>

<P>
If you have spare cycles and you want to help put them to use without
much effort on your part, join the daily build mailing list.
<H3><a name="Overriding_">Overriding +=</a></H3>

</P>

<P>

Alex Gough noted that overriding 
<CODE>+=</CODE> does unexpected things when the left-hand side is undefined or
non-overloaded; in his words:
<blockquote></P>

<P>
I'm not claiming overload has a problem, just that it is not possible to   
write overloading modules which do not warn on
</P>

<P>
 $undef += $obj
</P>

<P>
without also not warning on
</P>

<P>
 $whatever = $undef + $obj
</blockquote></P>

<P>

Rick Delaney had a patch which makes the &quot;add-assign&quot; method (instead of
the &quot;add&quot; method, which is the current behaviour) get called even on
non-overload left-hand sides. This broke old code, so there was some
discussion as to whether there was a neater way to do it. Tels suggested
treating undefined left-hand sides as zero, but Ronald Kimball pointed
out:
<blockquote></P>

<P>

I think that, since the 
<CODE>+=</CODE> is being overloaded, we *don't* know that the
undef will be treated like a 0.  An overloaded 
<CODE>+=</CODE> could do whatever it
wants with an undef.
</P>

<P>
Someone could even implement an overloaded 
<CODE>+=</CODE> that's supposed to warn
when the lefthand operand is undef.  :)
</blockquote>    <a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-02/msg00959.html">Read about it.</a></P>

<P>

<H3><a name="More_Big_Unicode_Wars">More Big Unicode Wars</a></H3>

</P>

<P>
Most of this week's (many) messages were taken up in various debates
about the state of Unicode handling and how the Unicode semantics should
work. I'm obviously too involved in the whole thing to give you an
objective summary of what went on, but I can point you at the highlights
and the starts of the threads.
</P>

<P>
One of the Unicode threads started
<a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-02/msg01091.html">here</a>, and eventually, let to some agreement between myself, Nick Ing-Simmons, Ilya
and Jarkko, which is a feat in itself; we decided that the model for
Unicode on EBCDIC will look like
<a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-02/msg01259.html">this</a>. (Incidentally, thanks to Morgan Stanley Dean Witter, who've promised
me a day's hacking time on their mainframes, this might even be implemented
soon.)
</P>

<P>
Another of the threads started 
<a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-02/msg01369.html">here</a> with Karsten Sperling attempting to nail down the semantics of Unicode
handling. Most of the ensuing discussion was a mixture of boring
language-lawyering and acrimony. Karsten also found some interesting
bugs related to character ranges on EBCDIC, which everyone swore had
been fixed years ago, but still seem to remain.
</P>

<P>
Nick Ing-Simmons posted a well thought-out and informative list and
discussion of the 
<a href="http://www.xray.mpe.mpg.de/mailing-lists/perl5-porters/2001-02/msg01563.html">remaining conflicts</a> between our Unicode implementation and the Camel III's discussion of
 what should happen.
</P>

<P>
Unintentional irony of the week award goes to Ilya, for breathtakingly
accusing Jarkko of &quot;unnecessarily obfuscating&quot; the regular expression
engine.
<H3><a name="Patchlevel_in_V_and_571">Patchlevel in $^V and 5.7.1</a></H3>

</P>

<P>

Nicholas Clark asked 
<blockquote></P>

<P>

Would it be possible to make the $^V version string for bleadperl have
the devel number after a third dot?
</P>

<P>
ie instead of
</P>

</P><PRE>
    perl -we 'printf "%vd\n", $^V'
    5.7.0
</PRE>

<P>
I'd like it if I could get
</P>

</P><PRE>
    perl -we 'printf "%vd\n", $^V'
    5.7.0.8670
</blockquote></PRE>

<P>

Jarkko noted that this would cause problems with CPAN.pm; Nick turned
around and asked when 5.7.1 was likely to happen. The outstanding issues
seem to be Unicode, PerlIO and numerical problems including casting.
</P>

<P>
PerlIO is now the default IO system, and isn't giving that many
problems. Nick Ing-Simmons noted that Nicholas Clark had produced a 
<a href="http://search.cpan.org/search?dist=PerlIO-gzip">PerlIO::gzip</a> filter extension which had flushed out a bunch of bugs.
</P>

<P>
Philip Newton said that a 5.7.0.8670-style release number wouldn't help
us much anyway, because features would get folded back into, say, 5.6.1
or 5.6.2, and if you said
</P>

</P><PRE>
    require 5.7.0.8760;
</PRE>

<P>
Perl barf on 5.6.1 even if the features you need had been folded back
in, bringing up the &quot;feature test&quot; discussion again.
</P>

<P>
Johan Vromans suggested that Perl could have a built-in 
<CODE>Config.pm</CODE> equivalent to report its configuration. Ted Ashton complained about the
 size of the resulting binary, but Robert Spier pointed out that 
<CODE>Config.pm</CODE> itself is pretty bloaty. Vadim Konovalov suggested that the advantage of 
having an external 
<CODE>Config.pm</CODE> is that you can change it and lie to Perl about how it was configured.
Don't try this at home, folks.
<H3><a name="Deleting_stashes">Deleting stashes</a></H3>

</P>

<P>

Here's an interesting and probably not too hard job for someone. Alan
Burlison found that if you delete a stash and then call a subroutine
that was in it, Perl segfaults:
</P>

</P><PRE>
    $ perl -e 'sub bang { print "bang!\n"; } undef %main::; bang;'
    Segmentation Fault(coredump)
</PRE>

<P>
What Alan and I agreed should happen is that stash deletion should be
allowed, but the method cache needs to be invalidated for that stash
when it is deleted so that the next attempt to call a sub on it will
give the ordinary &quot;undefined subroutine&quot; error.
<H3><a name="IO_on_VMS">IO on VMS</a></H3>

</P>

<P>

VMS seemed to be doing something very strange with output and pipes to
the effect that 
<CODE>Test::Harness</CODE> couldn't properly see the results of 
<CODE>Test.pm</CODE>. Eventually it was simplified to 
</P>

</P><PRE>
    print "a ";
    print "b ";
    print "c\n";
</PRE>

<P>
acting differently to 
</P>

</P><PRE>
    print "a b c\n";
</PRE>

<P>
and this was explained by Dan Sugalski in a way that startled nearly
everyone: &quot;The way perl does communication between processes on VMS
involves mailboxes.&quot;
</P>

<P>
But it transpired that the reality is somewhat more boring than we
imagined: rather than a Heath-Robinsonian email-based IPC system,
mailboxes are actually a little like Unix domain sockets. You send
output as batches of records. Hence, there's a difference between
sending the output as three records and as one. As there's a record
separator between the prints, you get different output. 
<H3><a name="Various">Various</a></H3>

</P>

<P>

Tim Jenness fixed up some long-standing known issues with 
<CODE>File::Temp</CODE>; if you were getting scary warning messages from 
<CODE>File::Temp</CODE> tests in the past, you won't any more.
</P>

<P>
Alan's been whacking at some more memory leaks; Jarkko was reproducing
far more leaks than Alan until he turned up 
<CODE>PERL_DESTRUCT_LEVEL</CODE>, which actually frees the memory in use tidily, instead of allowing it
to be reclaimed when the process exits. He asked why we don't do this
all the time; the answer was &quot;speed&quot; - the exit's going to happen
anyway, so why shut down gracefully? As Jarkko put it, &quot;No point
shaving in the morning if you are a kamikaze pilot?&quot; Naturally, this
lead to a discussion about the grooming habits of kamikaze.
</P>

<P>
Sarathy said &quot;yikes&quot; again, although on an unrelated topic.
</P>

<P>
Until next week I remain, your humble and obedient servant,
</P>

<hr>

<a href="mailto:simon@brecon.co.uk">Simon Cozens</a>


<ul>
  <li><a href="#Notes">Notes</a>
  <li><a href="#Smoke_Testing">Smoke Testing</a>
  <li><a href="#Overriding_">Overriding +=</a>
  <li><a href="#More_Big_Unicode_Wars">More Big Unicode Wars</a>
  <li><a href="#Patchlevel_in_V_and_571">Patchlevel in $^V and 5.7.1</a>
  <li><a href="#Deleting_stashes">Deleting stashes</a>
  <li><a href="#IO_on_VMS">IO on VMS</a>
  <li><a href="#Various">Various</a>
</ul>
