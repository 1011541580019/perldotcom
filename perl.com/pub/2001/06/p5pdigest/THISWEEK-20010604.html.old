<!-- This week on perl5-porters (28 May--3 June 2001) -->

<br />
<!::field::date::><br />
      <H3><a name="Notes">Notes</a></H3>

</P>

<P>

You can subscribe to an email version of this summary by sending an
empty message to 
<a href="mailto:perl5-porters-digest-subscribe@netthink.co.uk"><tt>perl5-porters-digest-subscribe@netthink.co.uk</tt>.</a></P>

<P>
Please send corrections and additions to 
<CODE>perl-thisweek-YYYYMM@simon-cozens.org</CODE> where 
<CODE>YYYYMM</CODE> is the current year and month.  Changes and additions to the 
<a href="http://simon-cozens.org/writings/whos-who.html">perl5-porters</a> biographies are particularly welcome.
</P>

<P>

</P>

<P>
This was a faily active week with 700 messages.
<H3><a name="Testing_testing">Testing, testing</a></H3>

</P>

<P>

<a href="http://simon-cozens.org/writings/whos-who.html#SCHWERN">Michael Schwern</a> was on a rampage this week attempting to improve the
Perl test suite. The current test suite is quite extensive, but
maintenance (or even finding which test failed) is currently tricky
due to them being numbered.
<a href="http://simon-cozens.org/writings/whos-who.html#SANDEN">Hugo</a> sums it up very nicely:
<blockquote>As someone who regularly tries to put in the effort to add test cases,
I find there is little difference in the effort involved in adding a
test case whether or not I have to encode the test number in the test
case.
</P>

<P>
As someone who regularly tries to investigate test failures, the lack
of test numbers makes life _much_ more difficult. It isn't just the
time it takes to discover which test failed, but also the fact that
it diverts my concentration from the code I want to be thinking about,
so that the debugging process becomes that much more difficult.
</blockquote></P>

<P>
The rest of his 
<a href="http://archive.develooper.com/perl5-porters@perl.org/msg58351.html">post</a> is also interesting.
</P>

<P>
Schwern (in his role as Perl Quality Assurance pumpkin) has been slowly improving the available testing tools, such as the 
<CODE>Test::Simple</CODE> module on CPAN, &quot;an extremely simple, extremely basic module for
writing tests suitable for CPAN modules and other pursuits&quot;. Instead
of simply numbering the tests, it allows tests to be named. From its
documentation:
</P>

</P><PRE>
 # This produces "ok 1 - Hell not yet frozen over" (or not ok)
 ok( get_temperature($hell) > 0, 'Hell not yet frozen over' );
</PRE>

<P>
Schwern is currently holding off integrating the module into the core until he gets
the interface just right. Tony Bowden 
<a href="http://archive.develooper.com/perl5-porters@perl.org/msg58427.html">dreamt</a> about a world of testing and psychology, 
with convincing arguments about the module.
</P>

<P>
Schwern also submitted quite a few patches to the test suite to sync the
latest version of the
<CODE>Test</CODE> and 
<CODE>Test::Harness</CODE> modules from CPAN into the core and to improve the test suite.
<H3><a name="libnet_in_the_core">libnet in the core</a></H3>

</P>

<P>

<a href="http://simon-cozens.org/writings/whos-who.html#HIETANIEMI">Jarkko</a> introduced us to his evil plan to integrate all of CPAN into
the Perl core, assimilating libnet this week. libnet contains various
client side networking modules, such as Net::FTP, Net::NNTP, Net::POP3,
Net::Time and Net::SMTP, but unfortunately requires some initial
configuration. The idea was that libnet could be told only once which
POP3 server to use, which it would then use by default in future.
</P>

<P>
Jarkko asked whether configuration could be delayed. There followed
some discussion about providing a seperate configuration utility which
could be run after configuration-time, some talk (and flames) about a
<CODE>.perlrc</CODE> per-user configuration file, and testing the modules by shipping
small fake servers. No concensus was reached.
<H3><a name="Warnings_crusade">Warnings crusade</a></H3>

</P>

<P>

It was very much a week of patches from Schwern, who continued on his
crusade to make Perl compile cleanly under 
<CODE>-Wall</CODE>, jumping over hoops
sometimes to get rid of warnings.
</P>

<P>
After a slew of patches, Schwern suggested making 
<CODE>-Wall</CODE> the default
to stop new patches containing warnings. Jarkko made it so, with the
slightly suprising problem that Perl no longer compiled on Solaris
with gcc. The culprit turned out to be 
<CODE>-ansi</CODE>, which has been temporarily removed.
<H3><a name="Various">Various</a></H3>

</P>

<P>

Hugo posted a 
<a href="http://archive.develooper.com/perl5-porters@perl.org/msg57821.html">wonderful comparison</a> of various benchmarks containing the experimental 
<CODE>?></CODE> regular expression feature, along with a small discussion of the
 regular expression optimiser. 
</P>

<P>
Tye McQueen posted a small patch attempting to make pathological hash
keys much more unlikely.
</P>

<P>
H.Merijn Brand posted some patches to get Perl running on AIX and gcc.
</P>

<P>
There was some more talk on documenting 
<CODE>sort</CODE> as stable, with perhaps having a pragma such as
<CODE>use sort qw( stable unique );</CODE>.
</P>

<P>
Jarkko submitted some UTF bug reports and proceeded to fix some.
</P>

<P>
Ilya provided some more OS/2 patches.
</P>

<P>
Ilmari Karonen provided an interesting bug report which was produced by
his Markov chain random input tester.
</P>

<P>
Hugo provided a patch to stop 
<CODE>Atof</CODE> numifying &quot;0xa&quot; to 10. At the moment Perl was relying on the
system's  
<CODE>atof</CODE> which turns out to be different on different platforms, so we now 
 have an implementation in Perl. 
</P>

<P>
Jarkko attempted to make 
<CODE>use utf8</CODE> the default, allowing us to write our scripts in UTF-8. It was shot down
very rapidly by the backwards-compatibility police due to no longer allowing
naked bytes with the eight bit, such as the pound character.
</P>

<P>
Doug MacEachern posted some patches to clean up and optimise 
<CODE>Cwd.pm</CODE>.
</P>

<P>
Until next week I remain, your temporarily-replaced humble and
obedient servant,
</P>

<P>
Leon Brocard, <a href="mailto:leon@iterative-software.com
">leon@iterative-software.com</a>
</P>

<hr>


<ul>
  <li><a href="#Notes">Notes</a>
  <li><a href="#Testing_testing">Testing, testing</a>
  <li><a href="#libnet_in_the_core">libnet in the core</a>
  <li><a href="#Warnings_crusade">Warnings crusade</a>
  <li><a href="#Various">Various</a>
</ul>
